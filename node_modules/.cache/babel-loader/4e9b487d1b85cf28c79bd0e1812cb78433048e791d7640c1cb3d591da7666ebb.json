{"ast":null,"code":"var _jsxFileName = \"/Users/muhsin/Developments/phase-4/eal-planner-app/src/components/MealForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MealForm = ({\n  onAddMeal,\n  mealToEdit,\n  onEditMeal\n}) => {\n  _s();\n  const [name, setName] = useState('');\n  const [ingredients, setIngredients] = useState('');\n  const [imageUrl, setImageUrl] = useState('');\n  const [instructions, setInstructions] = useState('');\n  const [error, setError] = useState('');\n  useEffect(() => {\n    if (mealToEdit) {\n      setName(mealToEdit.name);\n      setIngredients(mealToEdit.ingredients);\n      setImageUrl(mealToEdit.image_url);\n      setInstructions(mealToEdit.instructions);\n    }\n  }, [mealToEdit]);\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    // Frontend validation before submitting\n    if (!name || !ingredients || !instructions || !imageUrl) {\n      setError('All fields are required.');\n      return;\n    }\n    const newMeal = {\n      name,\n      ingredients,\n      instructions,\n      image_url: imageUrl\n    };\n    if (mealToEdit) {\n      // Edit meal\n      fetch(`https://meal-planner-app-backend.onrender.com/meals/${mealToEdit.id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(newMeal)\n      }).then(response => response.json()).then(updatedMeal => {\n        onEditMeal(updatedMeal); // Immediately reflect the updated meal\n        setName('');\n        setIngredients('');\n        setImageUrl('');\n        setInstructions('');\n        setError(''); // Clear error if the form is valid\n      }).catch(error => console.error('Error updating meal:', error));\n    } else {\n      // Add new meal\n      fetch('https://meal-planner-app-backend.onrender.com/meals', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(newMeal)\n      }).then(response => response.json()).then(data => {\n        onAddMeal(data.meal); // Immediately reflect the added meal\n        setName('');\n        setIngredients('');\n        setImageUrl('');\n        setInstructions('');\n        setError(''); // Clear error if the form is valid\n      }).catch(error => console.error('Error adding meal:', error));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"meal-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: mealToEdit ? 'Edit Meal' : 'Add a New Meal'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: name,\n        onChange: e => setName(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Ingredients:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: ingredients,\n        onChange: e => setIngredients(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Instructions:\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: instructions,\n        onChange: e => setInstructions(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Image URL:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: imageUrl,\n        onChange: e => setImageUrl(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: mealToEdit ? 'Update Meal' : 'Add Meal'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n_s(MealForm, \"Pb5hePfFpjpjucRL84QKfrtqWIs=\");\n_c = MealForm;\nexport default MealForm;\nvar _c;\n$RefreshReg$(_c, \"MealForm\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","MealForm","onAddMeal","mealToEdit","onEditMeal","_s","name","setName","ingredients","setIngredients","imageUrl","setImageUrl","instructions","setInstructions","error","setError","image_url","handleSubmit","event","preventDefault","newMeal","fetch","id","method","headers","body","JSON","stringify","then","response","json","updatedMeal","catch","console","data","meal","onSubmit","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","required","_c","$RefreshReg$"],"sources":["/Users/muhsin/Developments/phase-4/eal-planner-app/src/components/MealForm.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst MealForm = ({ onAddMeal, mealToEdit, onEditMeal }) => {\n  const [name, setName] = useState('');\n  const [ingredients, setIngredients] = useState('');\n  const [imageUrl, setImageUrl] = useState('');\n  const [instructions, setInstructions] = useState('');\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    if (mealToEdit) {\n      setName(mealToEdit.name);\n      setIngredients(mealToEdit.ingredients);\n      setImageUrl(mealToEdit.image_url);\n      setInstructions(mealToEdit.instructions);\n    }\n  }, [mealToEdit]);\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    \n    // Frontend validation before submitting\n    if (!name || !ingredients || !instructions || !imageUrl) {\n      setError('All fields are required.');\n      return;\n    }\n\n    const newMeal = { name, ingredients, instructions, image_url: imageUrl };\n\n    if (mealToEdit) {\n      // Edit meal\n      fetch(`https://meal-planner-app-backend.onrender.com/meals/${mealToEdit.id}`, {\n        method: 'PUT',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(newMeal),\n      })\n        .then((response) => response.json())\n        .then((updatedMeal) => {\n          onEditMeal(updatedMeal); // Immediately reflect the updated meal\n          setName('');\n          setIngredients('');\n          setImageUrl('');\n          setInstructions('');\n          setError('');  // Clear error if the form is valid\n        })\n        .catch((error) => console.error('Error updating meal:', error));\n    } else {\n      // Add new meal\n      fetch('https://meal-planner-app-backend.onrender.com/meals', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(newMeal),\n      })\n        .then((response) => response.json())\n        .then((data) => {\n          onAddMeal(data.meal); // Immediately reflect the added meal\n          setName('');\n          setIngredients('');\n          setImageUrl('');\n          setInstructions('');\n          setError('');  // Clear error if the form is valid\n        })\n        .catch((error) => console.error('Error adding meal:', error));\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className=\"meal-form\">\n      <h2>{mealToEdit ? 'Edit Meal' : 'Add a New Meal'}</h2>\n      {error && <div className=\"error-message\">{error}</div>} {/* Display error message */}\n      <label>\n        Name:\n        <input type=\"text\" value={name} onChange={(e) => setName(e.target.value)} required />\n      </label>\n      <label>\n        Ingredients:\n        <input type=\"text\" value={ingredients} onChange={(e) => setIngredients(e.target.value)} required />\n      </label>\n      <label>\n        Instructions:\n        <textarea value={instructions} onChange={(e) => setInstructions(e.target.value)} required />\n      </label>\n      <label>\n        Image URL:\n        <input type=\"text\" value={imageUrl} onChange={(e) => setImageUrl(e.target.value)} />\n      </label>\n      <button type=\"submit\">{mealToEdit ? 'Update Meal' : 'Add Meal'}</button>\n    </form>\n  );\n};\n\n\nexport default MealForm;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,QAAQ,GAAGA,CAAC;EAAEC,SAAS;EAAEC,UAAU;EAAEC;AAAW,CAAC,KAAK;EAAAC,EAAA;EAC1D,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACW,WAAW,EAAEC,cAAc,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACa,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACe,YAAY,EAAEC,eAAe,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACiB,KAAK,EAAEC,QAAQ,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACd,IAAIK,UAAU,EAAE;MACdI,OAAO,CAACJ,UAAU,CAACG,IAAI,CAAC;MACxBG,cAAc,CAACN,UAAU,CAACK,WAAW,CAAC;MACtCG,WAAW,CAACR,UAAU,CAACa,SAAS,CAAC;MACjCH,eAAe,CAACV,UAAU,CAACS,YAAY,CAAC;IAC1C;EACF,CAAC,EAAE,CAACT,UAAU,CAAC,CAAC;EAEhB,MAAMc,YAAY,GAAIC,KAAK,IAAK;IAC9BA,KAAK,CAACC,cAAc,CAAC,CAAC;;IAEtB;IACA,IAAI,CAACb,IAAI,IAAI,CAACE,WAAW,IAAI,CAACI,YAAY,IAAI,CAACF,QAAQ,EAAE;MACvDK,QAAQ,CAAC,0BAA0B,CAAC;MACpC;IACF;IAEA,MAAMK,OAAO,GAAG;MAAEd,IAAI;MAAEE,WAAW;MAAEI,YAAY;MAAEI,SAAS,EAAEN;IAAS,CAAC;IAExE,IAAIP,UAAU,EAAE;MACd;MACAkB,KAAK,CAAC,uDAAuDlB,UAAU,CAACmB,EAAE,EAAE,EAAE;QAC5EC,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACP,OAAO;MAC9B,CAAC,CAAC,CACCQ,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,WAAW,IAAK;QACrB3B,UAAU,CAAC2B,WAAW,CAAC,CAAC,CAAC;QACzBxB,OAAO,CAAC,EAAE,CAAC;QACXE,cAAc,CAAC,EAAE,CAAC;QAClBE,WAAW,CAAC,EAAE,CAAC;QACfE,eAAe,CAAC,EAAE,CAAC;QACnBE,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAE;MACjB,CAAC,CAAC,CACDiB,KAAK,CAAElB,KAAK,IAAKmB,OAAO,CAACnB,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC,CAAC;IACnE,CAAC,MAAM;MACL;MACAO,KAAK,CAAC,qDAAqD,EAAE;QAC3DE,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACP,OAAO;MAC9B,CAAC,CAAC,CACCQ,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEM,IAAI,IAAK;QACdhC,SAAS,CAACgC,IAAI,CAACC,IAAI,CAAC,CAAC,CAAC;QACtB5B,OAAO,CAAC,EAAE,CAAC;QACXE,cAAc,CAAC,EAAE,CAAC;QAClBE,WAAW,CAAC,EAAE,CAAC;QACfE,eAAe,CAAC,EAAE,CAAC;QACnBE,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAE;MACjB,CAAC,CAAC,CACDiB,KAAK,CAAElB,KAAK,IAAKmB,OAAO,CAACnB,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC,CAAC;IACjE;EACF,CAAC;EAED,oBACEd,OAAA;IAAMoC,QAAQ,EAAEnB,YAAa;IAACoB,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACjDtC,OAAA;MAAAsC,QAAA,EAAKnC,UAAU,GAAG,WAAW,GAAG;IAAgB;MAAAoC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,EACrD5B,KAAK,iBAAId,OAAA;MAAKqC,SAAS,EAAC,eAAe;MAAAC,QAAA,EAAExB;IAAK;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,EAAC,GAAC,eACxD1C,OAAA;MAAAsC,QAAA,GAAO,OAEL,eAAAtC,OAAA;QAAO2C,IAAI,EAAC,MAAM;QAACC,KAAK,EAAEtC,IAAK;QAACuC,QAAQ,EAAGC,CAAC,IAAKvC,OAAO,CAACuC,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;QAACI,QAAQ;MAAA;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChF,CAAC,eACR1C,OAAA;MAAAsC,QAAA,GAAO,cAEL,eAAAtC,OAAA;QAAO2C,IAAI,EAAC,MAAM;QAACC,KAAK,EAAEpC,WAAY;QAACqC,QAAQ,EAAGC,CAAC,IAAKrC,cAAc,CAACqC,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;QAACI,QAAQ;MAAA;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9F,CAAC,eACR1C,OAAA;MAAAsC,QAAA,GAAO,eAEL,eAAAtC,OAAA;QAAU4C,KAAK,EAAEhC,YAAa;QAACiC,QAAQ,EAAGC,CAAC,IAAKjC,eAAe,CAACiC,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;QAACI,QAAQ;MAAA;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvF,CAAC,eACR1C,OAAA;MAAAsC,QAAA,GAAO,YAEL,eAAAtC,OAAA;QAAO2C,IAAI,EAAC,MAAM;QAACC,KAAK,EAAElC,QAAS;QAACmC,QAAQ,EAAGC,CAAC,IAAKnC,WAAW,CAACmC,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/E,CAAC,eACR1C,OAAA;MAAQ2C,IAAI,EAAC,QAAQ;MAAAL,QAAA,EAAEnC,UAAU,GAAG,aAAa,GAAG;IAAU;MAAAoC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAS,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpE,CAAC;AAEX,CAAC;AAACrC,EAAA,CAvFIJ,QAAQ;AAAAgD,EAAA,GAARhD,QAAQ;AA0Fd,eAAeA,QAAQ;AAAC,IAAAgD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}